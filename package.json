{
  "name": "secondbrain-backend",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "dev": "npm run build &&  NODE_ENV=dev node build/server.js",
    "prod": "npm run build &&  NODE_ENV=prod node build/server.js",
    "local:build": "npm run build && cross-env NODE_ENV=local node build/server.js",
    "start": "npm run k ||  NODE_ENV=dev ts-node-dev --respawn --transpile-only src/server.ts",
    "gen": "plop",
    "k": "kill -9 $(lsof -t -i:8088)",
    "test": "npm run k || jest --watchAll --detectOpenHandles",
    "clean": "rm -rf build",
    "clear": "npm cache clean --force",
    "test1": "jest --watchAll --detectOpenHandles --coverage",
    "local": "npm run build &&  NODE_ENV=local node build/server.js",
    "kdev": "lsof -ti:8088 > /dev/null && kill -9 $(lsof -ti:8088) || echo 'Port 8088 is free'; npm run dev",
    "kdev2": "kill -9 $(lsof -t -i:8088) && npm run dev",
    "kill": "fuser -n tcp -k 8088",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --ext .ts --fix",
    "format": "prettier --write \"src/**/*.ts\"",
    "prepare": "husky",
    "swagger:bundle": "node scripts/swagger-bundle.js",
    "swagger:validate": "npx @redocly/cli lint swagger/base.json",
    "swagger:serve": "npx @redocly/cli preview-docs swagger/base.json",
    "docs": "node scripts/build-swagger.js",
    "docs:view": "npx swagger-ui-express -p 3001 -u http://localhost:3000/api-docs",
    "docs:test": "node scripts/validate-swagger.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@google-cloud/translate": "^8.3.0",
    "@google/generative-ai": "^0.13.0",
    "@os-team/youtube-captions": "^3.0.2",
    "argon2": "^0.31.2",
    "aws-sdk": "^2.1687.0",
    "axios": "^1.7.3",
    "cheerio": "^1.0.0-rc.12",
    "cluster": "^0.7.7",
    "config": "^3.3.9",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "date-fns": "^4.1.0",
    "dayjs": "^1.11.11",
    "dotenv": "^16.4.5",
    "express": "^4.18.2",
    "fast-xml-parser": "^4.4.1",
    "g": "^2.0.1",
    "googleapis": "^140.0.1",
    "imagekit": "^5.0.1",
    "jsdom": "^25.0.1",
    "jsonwebtoken": "^9.0.2",
    "mailgun.js": "^10.2.3",
    "module-alias": "^2.2.3",
    "mongoose": "^8.0.3",
    "morgan": "^1.10.0",
    "node-cron": "^3.0.3",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.9.14",
    "nodemailer-ses-transport": "^1.5.1",
    "nodemon": "^3.0.2",
    "pako": "^2.1.0",
    "puppeteer": "^22.15.0",
    "randomstring": "^1.3.0",
    "react-icons": "^5.3.0",
    "slugify": "^1.6.6",
    "socket.io": "^4.7.5",
    "swagger-ui-express": "^5.0.0",
    "tough-cookie": "^5.0.0",
    "uuidv4": "^6.2.13",
    "youtube-caption-extractor": "^1.4.3",
    "youtube-dl-exec": "^3.0.7",
    "youtube-transcript": "^1.2.1",
    "yt-dlp-wrap": "^2.3.12",
    "ytdl-core": "^4.11.5",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@redocly/cli": "^1.34.0",
    "@types/aws-sdk": "^2.7.0",
    "@types/cheerio": "^0.22.35",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.14.8",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.15",
    "@types/pako": "^2.0.3",
    "@types/randomstring": "^1.3.0",
    "@types/swagger-ui-express": "^4.1.6",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^4.2.2",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2",
    "prettier": "^3.2.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.2"
  },
  "_moduleAliases": {
    "@middleware": "build/middleware",
    "@routes": "build/routes",
    "@baseRoute": "build/routes/base.routes",
    "@common": "build/common",
    "@services": "build/services",
    "@controllers": "build/controllers",
    "@baseController": "build/controllers/base.controller",
    "@models": "build/models",
    "@entity": "build/entity",
    "@builders": "build/builder",
    "@response": "build/response",
    "@utils": "build/services/utils"
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
