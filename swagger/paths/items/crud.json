{
  "/items": {
    "post": {
      "tags": ["Items"],
      "summary": "Create a new item",
      "description": "Creates a new item in the inventory",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "adminId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the admin creating the item"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the item"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the item"
                },
                "image": {
                  "type": "string",
                  "description": "URL to the item's image"
                },
                "category": {
                  "type": "string",
                  "description": "Category of the item"
                },
                "containerType": {
                  "type": "string",
                  "description": "Type of container used for this item"
                },
                "requiresReturn": {
                  "type": "boolean",
                  "description": "Whether the container needs to be returned"
                },
                "depositAmount": {
                  "type": "number",
                  "description": "Deposit amount for the container if applicable"
                },
                "price": {
                  "type": "number",
                  "description": "Regular price of the item"
                },
                "discountedPrice": {
                  "type": "number",
                  "description": "Discounted price if applicable"
                }
              },
              "required": ["adminId", "name", "containerType", "price"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Item created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "400": {
          "description": "Invalid request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/items/{itemId}": {
    "get": {
      "tags": ["Items"],
      "summary": "Get item by ID",
      "description": "Retrieves a specific item by its ID",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "itemId",
          "in": "path",
          "required": true,
          "description": "ID of the item to retrieve",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Item retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "404": {
          "description": "Item not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": ["Items"],
      "summary": "Update item",
      "description": "Updates an existing item",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "itemId",
          "in": "path",
          "required": true,
          "description": "ID of the item to update",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the item"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the item"
                },
                "image": {
                  "type": "string",
                  "description": "URL to the item's image"
                },
                "category": {
                  "type": "string",
                  "description": "Category of the item"
                },
                "containerType": {
                  "type": "string",
                  "description": "Type of container used for this item"
                },
                "requiresReturn": {
                  "type": "boolean",
                  "description": "Whether the container needs to be returned"
                },
                "depositAmount": {
                  "type": "number",
                  "description": "Deposit amount for the container if applicable"
                },
                "price": {
                  "type": "number",
                  "description": "Regular price of the item"
                },
                "discountedPrice": {
                  "type": "number",
                  "description": "Discounted price if applicable"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Item updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        },
        "400": {
          "description": "Invalid request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "404": {
          "description": "Item not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["Items"],
      "summary": "Delete item",
      "description": "Deletes an item by ID",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "itemId",
          "in": "path",
          "required": true,
          "description": "ID of the item to delete",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Item deleted successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "Item deleted successfully"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Item not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  }
} 