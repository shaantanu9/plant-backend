{
  "/subscribers": {
    "post": {
      "tags": ["Subscribers"],
      "summary": "Create a new subscriber",
      "description": "Creates a new subscriber account",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["userId", "address", "subscriptionType", "deliveryDays"],
              "properties": {
                "userId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "ID of the associated user account"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the subscriber"
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the subscriber"
                },
                "address": {
                  "type": "string",
                  "description": "Main address of the subscriber"
                },
                "fullAddress": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string"
                    },
                    "apartment": {
                      "type": "string"
                    },
                    "landmark": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "coordinates": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "float"
                        },
                        "lng": {
                          "type": "number",
                          "format": "float"
                        }
                      }
                    }
                  }
                },
                "zone": {
                  "type": "string",
                  "description": "Delivery zone or area"
                },
                "subscriptionType": {
                  "type": "string",
                  "enum": ["daily", "weekly"],
                  "description": "Type of subscription"
                },
                "deliveryDays": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
                  },
                  "description": "Days for scheduled deliveries"
                },
                "preferredTimeSlot": {
                  "type": "string",
                  "description": "Preferred time for deliveries"
                },
                "alternateRecipient": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                },
                "deliveryInstructions": {
                  "type": "string",
                  "description": "Special instructions for delivery"
                },
                "notes": {
                  "type": "string",
                  "description": "General notes about the subscriber"
                }
              }
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Subscriber created successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscriber"
              }
            }
          }
        },
        "400": {
          "description": "Invalid request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "409": {
          "description": "Subscriber already exists for this user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "get": {
      "tags": ["Subscribers"],
      "summary": "Get all subscribers",
      "description": "Retrieves a list of all subscribers with optional filtering",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "isActive",
          "in": "query",
          "required": false,
          "description": "Filter by active status",
          "schema": {
            "type": "boolean"
          }
        },
        {
          "name": "zone",
          "in": "query",
          "required": false,
          "description": "Filter by zone",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "subscriptionType",
          "in": "query",
          "required": false,
          "description": "Filter by subscription type",
          "schema": {
            "type": "string",
            "enum": ["daily", "weekly"]
          }
        },
        {
          "name": "page",
          "in": "query",
          "required": false,
          "description": "Page number for pagination",
          "schema": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          }
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "description": "Number of items per page",
          "schema": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          }
        },
        {
          "name": "sort",
          "in": "query",
          "required": false,
          "description": "Field to sort by",
          "schema": {
            "type": "string",
            "enum": ["name", "zone", "joinDate", "containerCount", "pendingContainers"],
            "default": "joinDate"
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "description": "Sort order",
          "schema": {
            "type": "string",
            "enum": ["asc", "desc"],
            "default": "desc"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "List of subscribers retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  },
                  "pagination": {
                    "$ref": "#/components/schemas/Pagination"
                  }
                }
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  },
  "/subscribers/{subscriberId}": {
    "get": {
      "tags": ["Subscribers"],
      "summary": "Get subscriber by ID",
      "description": "Retrieves a specific subscriber by their ID",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "subscriberId",
          "in": "path",
          "required": true,
          "description": "ID of the subscriber to retrieve",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Subscriber retrieved successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscriber"
              }
            }
          }
        },
        "404": {
          "description": "Subscriber not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "put": {
      "tags": ["Subscribers"],
      "summary": "Update subscriber by ID",
      "description": "Updates an existing subscriber by their ID",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "subscriberId",
          "in": "path",
          "required": true,
          "description": "ID of the subscriber to update",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the subscriber"
                },
                "mobile": {
                  "type": "string",
                  "description": "Mobile number of the subscriber"
                },
                "address": {
                  "type": "string",
                  "description": "Main address of the subscriber"
                },
                "fullAddress": {
                  "type": "object",
                  "properties": {
                    "street": {
                      "type": "string"
                    },
                    "apartment": {
                      "type": "string"
                    },
                    "landmark": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "coordinates": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "float"
                        },
                        "lng": {
                          "type": "number",
                          "format": "float"
                        }
                      }
                    }
                  }
                },
                "zone": {
                  "type": "string",
                  "description": "Delivery zone or area"
                },
                "preferredTimeSlot": {
                  "type": "string",
                  "description": "Preferred time for deliveries"
                },
                "alternateRecipient": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                },
                "deliveryInstructions": {
                  "type": "string",
                  "description": "Special instructions for delivery"
                },
                "notes": {
                  "type": "string",
                  "description": "General notes about the subscriber"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Subscriber updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscriber"
              }
            }
          }
        },
        "400": {
          "description": "Invalid request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "404": {
          "description": "Subscriber not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    },
    "delete": {
      "tags": ["Subscribers"],
      "summary": "Delete subscriber by ID",
      "description": "Deletes a subscriber by their ID",
      "security": [
        {
          "BearerAuth": []
        }
      ],
      "parameters": [
        {
          "name": "subscriberId",
          "in": "path",
          "required": true,
          "description": "ID of the subscriber to delete",
          "schema": {
            "type": "string",
            "format": "uuid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Subscriber deleted successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": true
                  },
                  "message": {
                    "type": "string",
                    "example": "Subscriber deleted successfully"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Subscriber not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Error"
              }
            }
          }
        }
      }
    }
  }
} 